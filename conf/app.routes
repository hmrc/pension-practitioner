# microservice specific routes

POST          /register-with-id/individual                                                                      controllers.RegistrationController.registerWithIdIndividual
POST          /register-with-id/organisation                                                                    controllers.RegistrationController.registerWithIdOrganisation
POST          /register-with-no-id/organisation                                                                 controllers.RegistrationController.registrationNoIdOrganisation
POST          /register-with-no-id/individual                                                                   controllers.RegistrationController.registrationNoIdIndividual

GET           /journey-cache                                                                                    controllers.cache.DataCacheController.get
POST          /journey-cache                                                                                    controllers.cache.DataCacheController.save
DELETE        /journey-cache                                                                                    controllers.cache.DataCacheController.remove

POST          /subscribePsp/:journeyType                                                                        controllers.SubscriptionController.subscribePsp(journeyType: JourneyType.Name)
GET           /getPsp                                                                                           controllers.SubscriptionController.getPspDetails
POST          /deregisterPsp/:pspId                                                                             controllers.SubscriptionController.deregisterPsp(pspId: String)
POST          /authorise-psp                                                                                    controllers.AssociationController.authorisePsp
POST          /de-authorise-psp                                                                                 controllers.AssociationController.deAuthorisePsp

POST          /email-response/:journeyType/:requestId/:email/:pspId                                             controllers.EmailResponseController.retrieveStatus(journeyType: JourneyType.Name, requestId: String, email: String, pspId: String)

POST          /email-response-psp-auth/:encryptedPsaId/:encryptedPspId/:encryptedPstr/:encryptedEmail           controllers.EmailResponseController.retrieveStatusForPSPAuthorisation(encryptedPsaId, encryptedPspId, encryptedPstr, encryptedEmail)
POST          /email-response-psp-deauth/:encryptedPsaId/:encryptedPspId/:encryptedPstr/:encryptedEmail         controllers.EmailResponseController.retrieveStatusForPSPDeauthorisation(encryptedPsaId, encryptedPspId, encryptedPstr, encryptedEmail)
POST          /email-response-psp-self-deauth/:encryptedPspId/:encryptedPstr/:encryptedEmail                    controllers.EmailResponseController.retrieveStatusForPSPSelfDeauthorisation(encryptedPspId, encryptedPstr, encryptedEmail)
POST          /email-response-psp-dereg/:encryptedPspId/:encryptedEmail                                         controllers.EmailResponseController.retrieveStatusForPSPDeregistration(encryptedPspId, encryptedEmail)

GET           /get-minimal-details                                                                              controllers.MinimalDetailsController.getMinimalDetails
GET           /can-deregister/:id                                                                               controllers.SubscriptionController.canDeregister(id: String)
